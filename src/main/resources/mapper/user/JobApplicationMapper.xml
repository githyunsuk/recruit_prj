<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//MyBatis//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.co.sist.user.mapper.JobApplicationMapper">

    <!-- 1. 이메일로 이력서 조회 -->
    <select id="selectResumesByEmail" resultType="kr.co.sist.user.dto.ResumeDTO">
        SELECT
            resume_seq,
            email,
            title,
            image,
            introduction,
            created_at,
            updated_at,
            career_type,
            is_public
        FROM RESUME
        WHERE email = #{email}
    </select>
    
    
     
     <!-- 2. 사용자 이메일로 모든 첨부파일 조회 - 컬럼명 수정 -->
    <select id="selectAttachmentsByEmail" resultType="kr.co.sist.user.dto.AttachmentDTO">
        SELECT
            ATTACHMENT_SEQ as attachmentSeq,
            EMAIL as email,
            FILE_NAME as fileName,
            FILE_SIZE as fileSize,
            FILE_TYPE as fileType,
            CREATED_AT as createdAt
        FROM ATTACHMENT
        WHERE EMAIL = #{email}
        ORDER BY CREATED_AT DESC
    </select>
    

   <insert id="insertJobApplication" parameterType="map">
    INSERT INTO JOB_APPLICATION (
        resume_seq,
        job_posting_seq,
        application_status,
        application_date,
        is_read,
        pass_stage
    ) VALUES (
        #{resumeSeq},
        #{jobPostingSeq},
        #{applicationStatus},
        #{applicationDate},
        #{isRead},
        #{passStage}
    )
</insert>

    <!-- 3. (DTO 방식) 공고 지원 등록 -->
 <insert id="insertJobApplicationVO" parameterType="kr.co.sist.user.dto.JobApplicationDTO">
    INSERT INTO JOB_APPLICATION (
        resume_seq,
        job_posting_seq,
        application_status,
        application_date,
        interview_date,
        is_read,
        pass_stage
    ) VALUES (
        #{resumeSeq},
        #{jobPostingSeq},
        #{applicationStatus},
        #{applicationDate},
        #{interviewDate,jdbcType=VARCHAR},  <!-- interviewDate에 jdbcType 명시 -->
        #{isRead},
        #{passStage}
    )
</insert>


<!-- 5. 지원-첨부파일 관계 등록 -->
 <insert id="insertApplicationAttachment">
    INSERT INTO APPLICATION_ATTACHMENT (
        attachment_seq,
        job_application_seq
    ) VALUES (
        #{attachmentSeq, jdbcType=INTEGER},
        #{jobApplicationSeq, jdbcType=INTEGER}
    )
</insert>


</mapper>
